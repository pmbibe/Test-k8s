# kind: Namespace
# apiVersion: v1
# metadata:
#   name: mysql-replicate
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: heketi-secret
#   namespace: mysql-replicate
# type: "kubernetes.io/glusterfs"
# data:
#   # echo -n "PASSWORD" | base64
#   key: UEFTU1dPUkQ=
# ---
#  kind: StorageClass
#  apiVersion: storage.k8s.io/v1beta1
#  metadata:
#    name: gluster-heketi
#    namespace: mysql-replicate
#  provisioner: kubernetes.io/glusterfs
#  reclaimPolicy: Delete
#  volumeBindingMode: Immediate
#  allowVolumeExpansion: true
#  parameters:
#    resturl: "http://k8s-master:8080" 
#    restuser: "admin" 
#    secretName: "heketi-secret"
#    secretNamespace: "mysql-replicate"
#    volumetype: "replicate:2"
#    volumenameprefix: "k8s-dev"
#    clusterid: "a2cb8d309ef955f807e391831bb5a0a2"
# ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: mysql-replicate
data:
  master: |
    [mysqld]
    log-bin=mysql-bin
    server-id=1
    innodb_flush_log_at_trx_commit=1
    sync_binlog=1
    skip-name-resolve
    !includedir /etc/my.cnf.d
  slave: |
    [mysqld]
    innodb_flush_log_at_trx_commit=1
    sync_binlog=1
    server-id=2
    skip-name-resolve
    !includedir /etc/my.cnf.d
---
# apiVersion: v1
# kind: Pod
# metadata:
#   name: mysql-master
#   namespace: mysql-replicate
#   labels:
#     name: mysql-master
# spec:
#   volumes:
#     - name: data-master
#       persistentVolumeClaim:
#           claimName: data-master
#     - name: config-master
#       configMap:
#           name: mysql-config
#           items:
#           - key: master
#             path: server-id.cnf
#   containers:
#   - name: mysql-master
#     image: babibe2211/mysql
#     
#     ports:
#       - containerPort: 3306
#     volumeMounts:
#       - name: data-master
#         mountPath: /var/lib/mysql
#       - name: config-master
#         mountPath: /etc/mysql/mysql.conf.d/

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mysql-master
#   namespace: mysql-replicate
# spec:
#   selector:
#     name: mysql-master
#   ports:
#   - port: 3306
#     targetPort: 3306

# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: data-master
#   namespace: mysql-replicate
#   annotations:
#    volume.beta.kubernetes.io/storage-class: gluster-heketi
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 3Gi
---


apiVersion: v1
kind: Pod
metadata:
  name: mysql-slave
  namespace: mysql-replicate
  labels:
    name: mysql-slave
spec:
  volumes:
    - name: data-slave
      persistentVolumeClaim:
          claimName: data-slave
    - name: config-slave
      configMap:
          name: mysql-config
          items:
          - key: slave
            path: server-id.cnf
  containers:
  - name: mysql-slave
    image: babibe2211/mysql
    
    ports:
      - containerPort: 3306
    volumeMounts:
      - name: data-slave
        mountPath: /var/lib/mysql
      - name: config-slave
        mountPath: /etc/mysql/mysql.conf.d/

---
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-slave
  namespace: mysql-replicate
  annotations:
   volume.beta.kubernetes.io/storage-class: gluster-heketi
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---


# CREATE USER 'repl'@'%' IDENTIFIED BY 'password';
# GRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';
# flush privileges;

# CHANGE MASTER TO
#          MASTER_HOST='mysql-master.mysql-replicate',
#          MASTER_USER='repl',
#          MASTER_PASSWORD='password',
#          MASTER_LOG_FILE='mysql-bin.000001',
#          MASTER_LOG_POS=899;